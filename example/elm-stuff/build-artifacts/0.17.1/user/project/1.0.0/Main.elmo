var _user$project$Main$renderStats = function (stats) {
	var _p0 = stats;
	if (_p0.ctor === 'Nothing') {
		return _elm_lang$html$Html$text('');
	} else {
		return A2(
			_elm_lang$html$Html$h3,
			_elm_lang$core$Native_List.fromArray(
				[]),
			_elm_lang$core$Native_List.fromArray(
				[
					_elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Stats: ',
						_elm_lang$core$Basics$toString(_p0._0)))
				]));
	}
};
var _user$project$Main$initialModel = {stats: _elm_lang$core$Maybe$Nothing, article: _elm_lang$core$Maybe$Nothing, error: _elm_lang$core$Maybe$Nothing};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = F3(
	function (a, b, c) {
		return {stats: a, article: b, error: c};
	});
var _user$project$Main$Article = function (a) {
	return {body: a};
};
var _user$project$Main$articleDecoder = A2(
	_elm_lang$core$Json_Decode$object1,
	_user$project$Main$Article,
	A2(_elm_lang$core$Json_Decode_ops[':='], 'body', _elm_lang$core$Json_Decode$string));
var _user$project$Main$LoadingFailed = function (a) {
	return {ctor: 'LoadingFailed', _0: a};
};
var _user$project$Main$ArticleLoaded = function (a) {
	return {ctor: 'ArticleLoaded', _0: a};
};
var _user$project$Main$loadArticle = function (i) {
	var url = A2(
		_elm_lang$core$Basics_ops['++'],
		'https://jsonplaceholder.typicode.com/posts/',
		_elm_lang$core$Basics$toString(i));
	return A3(
		_elm_lang$core$Task$perform,
		function (_p1) {
			return _user$project$Main$LoadingFailed(
				_elm_lang$core$Basics$toString(_p1));
		},
		_user$project$Main$ArticleLoaded,
		A2(_evancz$elm_http$Http$get, _user$project$Main$articleDecoder, url));
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'LoadArticle':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _user$project$Main$loadArticle(_p2._0)
				};
			case 'ArticleLoaded':
				var _p3 = _p2._0;
				var body = _p3.body;
				var text = A2(_user$project$ReadingTime$stats, body, _elm_lang$core$Maybe$Nothing);
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							article: _elm_lang$core$Maybe$Just(body),
							stats: _elm_lang$core$Maybe$Just(text)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							error: _elm_lang$core$Maybe$Just(_p2._0)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$LoadArticle = function (a) {
	return {ctor: 'LoadArticle', _0: a};
};
var _user$project$Main$loadButton = function (i) {
	return A2(
		_elm_lang$html$Html$button,
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html_Events$onClick(
				_user$project$Main$LoadArticle(i))
			]),
		_elm_lang$core$Native_List.fromArray(
			[
				_elm_lang$html$Html$text(
				A2(
					_elm_lang$core$Basics_ops['++'],
					'load #',
					_elm_lang$core$Basics$toString(i)))
			]));
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		_elm_lang$core$Native_List.fromArray(
			[]),
		_elm_lang$core$Native_List.fromArray(
			[
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				A2(
					_elm_lang$core$List$map,
					_user$project$Main$loadButton,
					_elm_lang$core$Native_List.range(1, 5))),
				A2(
				_elm_lang$html$Html$div,
				_elm_lang$core$Native_List.fromArray(
					[]),
				_elm_lang$core$Native_List.fromArray(
					[
						_elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(model))
					])),
				_user$project$Main$renderStats(model.stats)
			]));
};
var _user$project$Main$main = {
	main: _elm_lang$html$Html_App$program(
		{
			init: _user$project$Main$init,
			update: _user$project$Main$update,
			view: _user$project$Main$view,
			subscriptions: function (_p4) {
				return _elm_lang$core$Platform_Sub$none;
			}
		})
};
